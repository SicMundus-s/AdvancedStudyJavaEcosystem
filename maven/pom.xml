<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>maven</artifactId>
<!--  SNAPSHOT - версия в разработке -->
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

<!--  Наследники модуля maven-->
  <name>maven</name>
  <modules>
    <module>database</module>
    <module>service</module>
    <module>web</module>
  </modules>

  <scm>
    <connection>scm:git:git@github.com:SicMundus-s/AdvancedStudyJavaEcosystem.git</connection>
    <developerConnection>scm:git:git@github.com:SicMundus-s/AdvancedStudyJavaEcosystem.git</developerConnection>
    <url>https://github.com/SicMundus-s/AdvancedStudyJavaEcosystem</url>
  </scm>

<!--  Проперти которые мы можем устанавливать-->
<!--  project.*-->
<!--  settings.*-->
<!--  ${spring.version} - user prop-->
<!--  env.* - Переменные среды-->
<!--  System.getProperty -D -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <!-- Устанавливает кодировку проекта -->
    <maven.compiler.source>15</maven.compiler.source>
    <maven.compiler.target>15</maven.compiler.target>
    <spring.version>5.1.7.RELEASE</spring.version>
  </properties>

<!--  <dependencyManagement> - Здесь указываются версии зависимостей которые используются в проекте,
но они не подтягиваются наследниками от этой помки
пока зависимость не будет указана в <dependencies теге у наследника-->
  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <version>5.0.0</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>42.2.19</version>
        <scope>runtime</scope>
        <!--      <optional>true</optional>-->
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13.1</version>
        <scope>test</scope> <!-- 5 обозначений scope: 1.compile - зависимости для компиляции 2.provided - зависимости будет прдоставлена кем-то другим
                                   3.runtime - зависимость нужна во время выполнения 4.system - не использовать, указывается путь к джарке который лежит на компьютере
                                   5.test- нужна для зависимостей тестовых  -->
        <exclusions>
          <!-- Здесь можно исключать транзитивные зависимости при необходимости.
          Необходимо для избежания ошибок во время компиляции и подтягивать более новые версии транзитивных зависимостей
            если maven неявно подтянул старую версию -->
        </exclusions>

      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <build>
<!--    Указываем статические ресурсы для maven, весь эксперс лангвич будет заменён -->
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <!--  <pluginManagement> работает так же как </dependencyManagement> но для плагинов-->
    <pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.1.0</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <id>copy-docker-files</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/target</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/docker</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>15</source>
          <target>15</target>
        </configuration>
      </plugin>
      <plugin>

        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <configuration>
          <!--          <includes>-->
          <!--            <include></include>-->
          <!--          </includes>-->
          <!--          <skip>true</skip>-->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.12.1</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.4.1</version>
      </plugin>

<!--      jacoco - Используется для генерации отчёта по тестам -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.8</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
        </executions>
       </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <archive>
            <manifest>
                <mainClass>org.example.App</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.4.2</version>
        <executions>
          <execution>
            <id>single-jar</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <descriptorRefs>jar-with-dependencies</descriptorRefs>
              <archive>
                <manifest>
                  <mainClass>org.example.App</mainClass>
                </manifest>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>

<!--      Релиз плагин мейвена, инструкции для перевода проекта в релиз-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.0-M6</version>
      </plugin>
      </plugins>
    </pluginManagement>
  </build>

<!--  Профили настроек, можно переопределять плагины, проперти, настройки-->
  <profiles>
    <profile>
      <id>prod</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.10.1</version>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

<!--  M2_HOME/conf-->
<!--  ~/.m2/settings.xml  - Здесь необходимо настроить удалённы репозиторий -->
  <distributionManagement> <!--Настройки удалённого репо -->
    <snapshotRepository>
      <id>nexus</id>
      <url><!-- url удалённого репо(в разработке) --></url>
    </snapshotRepository>
    <repository>
      <id>nexus</id>
      <url><!-- url удалённого репо(релизный) --></url>
    </repository>
  </distributionManagement>

</project>
